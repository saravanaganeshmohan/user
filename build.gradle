plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'

}

group = 'com.bank'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.apache.commons:commons-configuration2:2.9.0'
	compileOnly 'commons-io:commons-io:2.13.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	implementation('io.jsonwebtoken:jjwt:0.2')
	implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.31'

	runtimeOnly 'org.springdoc:springdoc-openapi-ui:1.6.11'
	implementation "org.apache.pdfbox:pdfbox:2.0.21"
	implementation "org.apache.pdfbox:preflight:2.0.21"
	compileOnly 'org.apache.httpcomponents:httpclient:4.5.14'

	testImplementation 'junit:junit:4.12'
	testImplementation 'com.google.truth:truth:0.33'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '+'
	implementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '+'
	implementation group: 'org.powermock', name: 'powermock-module-junit4', version: '+'
	testImplementation 'com.google.appengine:appengine-testing:+'
	testImplementation 'com.google.appengine:appengine-api-stubs:+'
	testImplementation 'com.google.appengine:appengine-tools-sdk:+'
	implementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '3.0.0-beta-10'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
}

test {
	useJUnit()
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle("test: " + descriptor + "  Running")
	}

	onOutput { descriptor, event ->
		logger.lifecycle("test: " + descriptor + ": " + event.message )
	}
	afterTest { descriptor, result ->
		logger.lifecycle("test: " + descriptor + ": " + result )
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
